/*
 * Copyright (c) 2017-2019 TIBCO Software Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

description = 'Spark Project ML Library'

dependencies {
  compile project(subprojectBase + 'snappy-spark-mllib-local_' + scalaBinaryVersion)
  compile project(subprojectBase + 'snappy-spark-core_' + scalaBinaryVersion)
  compile project(subprojectBase + 'snappy-spark-streaming_' + scalaBinaryVersion)
  compile project(subprojectBase + 'snappy-spark-sql_' + scalaBinaryVersion)
  compile project(subprojectBase + 'snappy-spark-graphx_' + scalaBinaryVersion)
  compile project(subprojectBase + 'snappy-spark-tags_' + scalaBinaryVersion)

  compile(group: 'org.scalanlp', name: 'breeze_' + scalaBinaryVersion, version: breezeVersion) {
    exclude(group: 'org.scala-lang', module: 'scala-library')
    exclude(group: 'junit', module: 'junit')
    exclude(group: 'org.apache.commons', module: 'commons-math3')
  }
  compile group: 'org.apache.commons', name: 'commons-math3', version: commonsMath3Version
  compile(group: 'org.jpmml', name: 'pmml-model', version: pmmlVersion) {
    exclude(group: 'org.jpmml', module: 'pmml-agent')
  }

  testCompile project(path: subprojectBase + 'snappy-spark-tags_' + scalaBinaryVersion, configuration: 'testOutput')
  testCompile project(path: subprojectBase + 'snappy-spark-mllib-local_' + scalaBinaryVersion, configuration: 'testOutput')
  testCompile project(path: subprojectBase + 'snappy-spark-core_' + scalaBinaryVersion, configuration: 'testOutput')
  testCompile project(path: subprojectBase + 'snappy-spark-streaming_' + scalaBinaryVersion, configuration: 'testOutput')
}

// TODO: netlib-lgpl profile

// fix scala+java test ordering
sourceSets.test.scala.srcDir 'src/test/java'
sourceSets.test.java.srcDirs = []
