/*
 * Copyright (c) 2017-2019 TIBCO Software Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */

description = 'Spark Project Catalyst'

apply plugin: 'antlr'

dependencies {
  compile project(subprojectBase + 'snappy-spark-core_' + scalaBinaryVersion)
  compile project(subprojectBase + 'snappy-spark-unsafe_' + scalaBinaryVersion)
  compile project(subprojectBase + 'snappy-spark-tags_' + scalaBinaryVersion)

  compile group: 'org.scala-lang', name: 'scala-compiler', version: scalaVersion
  compile group: 'org.codehaus.janino', name: 'janino', version: janinoVersion
  compile group: 'org.codehaus.janino', name: 'commons-compiler', version: janinoVersion
  compile group: 'org.antlr', name: 'antlr4-runtime', version: antlrVersion
  compile group: 'commons-codec', name: 'commons-codec', version: commonsCodecVersion
  antlr group: 'org.antlr', name: 'antlr4', version: antlrVersion

  testCompile project(path: subprojectBase + 'snappy-spark-tags_' + scalaBinaryVersion, configuration: 'testOutput')
  testCompile project(path: subprojectBase + 'snappy-spark-core_' + scalaBinaryVersion, configuration: 'testOutput')
}

compileScala.dependsOn generateGrammarSource

sourceSets.main.antlr.srcDirs = [ 'src/main/antlr4' ]

// use an output directory that IDEA can easily find
String antlrOut = 'src/generated/antlr4'
// add generated sources to scala compiler path (plugin adds it to java path)
sourceSets.main.scala.srcDir antlrOut
sourceSets.main.java.srcDirs = []

generateGrammarSource {
  arguments += [ '-package', 'org.apache.spark.sql.catalyst.parser', '-visitor' ]
  outputDirectory = file(antlrOut)
}
